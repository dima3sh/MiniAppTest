// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: seNiaoyHbqUbSRTV4dz1rm
// Component: pDPGks3vTyHu
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { useScreenVariants as useScreenVariantsl9TsMn1DF1V } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: l9TsMn1d_f1V/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: seNiaoyHbqUbSRTV4dz1rm/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: pDPGks3vTyHu/css
import FacebookIcon from "./icons/PlasmicIcon__Facebook"; // plasmic-import: 6w8-w4M8IHE7/icon
import group11PngPwwCdaDtN2Ow from "./images/group11Png.png"; // plasmic-import: PwwCdaDtN2Ow/picture
import twitterPngV7N1U2LF8Sij from "./images/twitterPng.png"; // plasmic-import: V7N1u2lF8SIJ/picture
import linkedinPng7Hmk0HCbcNw from "./images/linkedinPng.png"; // plasmic-import: _7hmk0hCbcNW/picture
import image148NMfSgVbvscl from "./images/image14.png"; // plasmic-import: 8nMFSgVbvscl/picture

createPlasmicElementProxy;

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array();

const $$ = {};

function PlasmicFooter__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsl9TsMn1DF1V()
  });
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <Stack__
        as={"section"}
        data-plasmic-name={"links"}
        data-plasmic-override={overrides.links}
        hasGap={true}
        className={classNames(projectcss.all, sty.links)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__aSmQi)}
        >
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__h11HM
            )}
            href={"/"}
            platform={"react"}
          >
            {"Home"}
          </PlasmicLink__>
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__haA6
            )}
            href={"/#services"}
            platform={"react"}
          >
            {"Services"}
          </PlasmicLink__>
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__hY4Od
            )}
            href={"/#work"}
            platform={"react"}
          >
            {"Work"}
          </PlasmicLink__>
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link___4YbMg
            )}
            href={"/#about"}
            platform={"react"}
          >
            {"About"}
          </PlasmicLink__>
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link___7OQnS
            )}
            href={"/#contact"}
            platform={"react"}
          >
            {"Contact"}
          </PlasmicLink__>
        </Stack__>
        <div className={classNames(projectcss.all, sty.columns___5Inbw)}>
          <div className={classNames(projectcss.all, sty.column__hHdJp)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vW6E)}
            >
              <PlasmicLink__
                aria-label={"Facebook"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__vHy9U
                )}
                href={"https://www.facebook.com"}
                platform={"react"}
                target={"_blank"}
              >
                <FacebookIcon
                  data-plasmic-name={"svg"}
                  data-plasmic-override={overrides.svg}
                  className={classNames(projectcss.all, sty.svg)}
                  role={"img"}
                />
              </PlasmicLink__>
              <PlasmicLink__
                aria-label={"Instagram"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__aXoVq
                )}
                href={"https://www.instagram.com"}
                platform={"react"}
                target={"_blank"}
              >
                <PlasmicImg__
                  data-plasmic-name={"instaPng"}
                  data-plasmic-override={overrides.instaPng}
                  alt={""}
                  className={classNames(sty.instaPng)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: group11PngPwwCdaDtN2Ow,
                    fullWidth: 326,
                    fullHeight: 326,
                    aspectRatio: undefined
                  }}
                />
              </PlasmicLink__>
              <PlasmicLink__
                aria-label={"Twitter"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__bXwN8
                )}
                href={"https://www.twitter.com"}
                platform={"react"}
                target={"_blank"}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__eNoTa)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: twitterPngV7N1U2LF8Sij,
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />
              </PlasmicLink__>
              <PlasmicLink__
                aria-label={"Linkedin"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__yfSsB
                )}
                href={"https://www.linkedin.com"}
                platform={"react"}
                target={"_blank"}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__pkKFn)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: linkedinPng7Hmk0HCbcNw,
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />
              </PlasmicLink__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.column__rb6Lz)}>
            <div className={classNames(projectcss.all, sty.freeBox__wWzBx)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__boUon)}
                displayHeight={"32px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"32px"}
                loading={"lazy"}
                src={{
                  src: image148NMfSgVbvscl,
                  fullWidth: 204,
                  fullHeight: 156,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__a4BRd
                )}
              >
                {"anna@design.com"}
              </div>
            </div>
          </div>
        </div>
      </Stack__>
      <div
        data-plasmic-name={"section"}
        data-plasmic-override={overrides.section}
        className={classNames(projectcss.all, sty.section)}
      >
        <div className={classNames(projectcss.all, sty.columns__dbOin)}>
          <div className={classNames(projectcss.all, sty.column__ttNbk)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hbLqY
              )}
            >
              {"\u00a9 2030 Freelance Portfolio."}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__a0Pjh)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jNEk5
              )}
            >
              {"Built by Anna Wu"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__np8Ys)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tkUCr
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Made in Plasmic"
                : "Made in Plasmic"}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "links", "svg", "instaPng", "section"],
  links: ["links", "svg", "instaPng"],
  svg: ["svg"],
  instaPng: ["instaPng"],
  section: ["section"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFooter__ArgProps,
          internalVariantPropNames: PlasmicFooter__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    links: makeNodeComponent("links"),
    svg: makeNodeComponent("svg"),
    instaPng: makeNodeComponent("instaPng"),
    section: makeNodeComponent("section"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
